name: Build Package Release

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:  
  workflow_dispatch:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-package-release:
    name: Build Package Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Set git config
        env:
           GH_TOKEN: ${{ github.token }}
        run: |
           git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
           git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
           git config -l

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://github.com/PaulHatch/semantic-version
      - name: Resolve version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          change_path: "Aio.Multidataset.Rest.Connector helm"
          namespace: "" # Named version, will be used as suffix for name version tag
          bump_each_commit: true
          search_commit_body: false
          enable_prerelease_mode: true
          version_from_branch: true

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: Aio.Multidataset.Rest.Connector/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # https://github.com/marketplace/actions/helm-publisher
      - name: Release Helm chart
        uses: stefanprodan/helm-gh-pages@v1.7.0
        with:
          # The chart app version is used to specify the default container image tag
          app_version: ${{ steps.meta.outputs.version}}
          branch: release_management
          charts_dir: helm
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.version.outputs.version }}

      # Release Helm Package
      #- name: Helm Chart Releaser
      # You may pin to the exact commit or the version.
      # uses: helm/chart-releaser-action@a917fd15b20e8b64b94d9158ad54cd6345335584
      #  uses: helm/chart-releaser-action@v1.6.0
      #  with:
          # The charts directory
      #    charts_dir: helm
          # Mark the created GitHub release as 'latest'
      #    mark_as_latest: true
          # Skip package upload if release/tag already exists
      #    skip_existing: false
          # Upload chart packages directly into publishing branch
      #    packages_with_index: true
          # Name of the branch to be used to push the index and artifacts. (default to: gh-pages but it is not set in the action it is a default value for the chart-releaser binary)
      #    pages_branch: release_management
      #  env:
      #    CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
